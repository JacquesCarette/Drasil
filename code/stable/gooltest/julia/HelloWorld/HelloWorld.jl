""" HelloWorld.jl
    Tests various GOOL functions. It should run without errors.
    - Authors: Brooks MacLachlan
    - Note: Generated by Drasil v0.1-alpha
"""

module HelloWorld

include("Helper.jl")
import .Helper

# Initializing variables
global b = 5
global myOtherList = [1.0, 1.5]
global oneIndex = findfirst(x -> x == 1.0, myOtherList) - 1
println(oneIndex)
global a = length(myOtherList)
@assert a == 2 "List size should be 2"
insert!(myOtherList, 3, 2.0)
append!(myOtherList, 2.5)
global e = myOtherList[2]
myOtherList[2] = 17.4
global myName = String[]
global myName = split("Brooks Mac", " ")
println(myName)
global boringList = [false, false, false, false, false]
println(boringList)
@assert b == 5 "b should be 5"
@assert length(myOtherList) == 4 "myOtherList should have 4 elements"
@assert oneIndex == 0 "oneIndex should be 0"
global s = Set([4, 7, 5])
@assert in(7, s) "Set s should contain 7"

# List slicing tests
# Create variables for list slices
global mySlicedList = Float64[]
global mySlicedList2 = Float64[]
global mySlicedList3 = Float64[]
global mySlicedList4 = Float64[]
global mySlicedList5 = Float64[]
global mySlicedList6 = Float64[]
global mySlicedList7 = Float64[]
global mySlicedList8 = Float64[]
global mySlicedList9 = Float64[]
global mySlicedList10 = Float64[]
global mySlicedList11 = Float64[]

# Create some variables for later tests
global x = 3
global y = 1
global z = -1

global mySlicedList = myOtherList[2:3]

global mySlicedList2 = myOtherList[2:2:4]

global mySlicedList3 = myOtherList[2:end]

global mySlicedList4 = myOtherList[4:1]

global mySlicedList5 = myOtherList[4:-1:3]

global mySlicedList6 = myOtherList[end:-1:3]

global mySlicedList7 = myOtherList[4:-1:begin]

global endIdx = z > 0 ? 0 : 2
global mySlicedList8 = myOtherList[4:z:endIdx]

global endIdx0 = z > 0 ? y : y + 2
global mySlicedList9 = myOtherList[x + 1:z:endIdx0]

global endIdx1 = z > 0 ? length(myOtherList) : 1
global mySlicedList10 = myOtherList[3:z:endIdx1]

global endIdx2 = z > 0 ? length(myOtherList) : 1
global mySlicedList10 = myOtherList[3:z:endIdx2]

global endIdx3 = z > 0 ? x : x + 2
global mySlicedList11 = myOtherList[y + 1:z:endIdx3]

# Print results of list slicing tests
println("")
println("List slicing:")
print("myOtherList: ")
println(myOtherList)
print("mySlicedList: ")
println(mySlicedList)
print("mySlicedList2: ")
println(mySlicedList2)
print("mySlicedList3: ")
println(mySlicedList3)
print("mySlicedList4: ")
println(mySlicedList4)
print("mySlicedList5: ")
println(mySlicedList5)
print("mySlicedList6: ")
println(mySlicedList6)
print("mySlicedList7: ")
println(mySlicedList7)
print("mySlicedList8: ")
println(mySlicedList8)
print("mySlicedList9: ")
println(mySlicedList9)
print("mySlicedList10: ")
println(mySlicedList10)
print("mySlicedList11: ")
println(mySlicedList11)

println("")
if b >= 6
    global dummy = "dummy"
elseif b == 5
    # If body -----------------------------------------------------------------
    global a = 5
    global b = a + 2
    global c = b + 3
    global d = b
    global d -= a
    global c -= d
    global b += 17;
    global c += 17;
    global a += 1;
    global d += 1;
    global c -= 1
    global b -= 1
    global myList = Int64[]
    const myConst = "Imconstant";
    println(myConst)
    println(a)
    println(b)
    println(c)
    println(d)
    println(myOtherList)
    println(mySlicedList)
    println("Type an int")
    global d = parse(Int64, readline())
    println("Type another")
    readline()
    
    println(" too")
    print("boo")
    print(true)
    print(0)
    print('c')
    println(!(true))
    println(-1)
    println(sqrt(4.0))
    println(abs(-4))
    println(log10(2.0))
    println(log(2.0))
    println(exp(-2.0))
    println(sin(2.0))
    println(cos(2.0))
    println(tan(2.0))
    println(tan(2.0))
    println(true && false)
    println(true || false)
    println(true && !(false))
    println(!(true && true))
    println(6 + 2)
    println(6 - 2)
    println(6 * 2)
    println(6 รท 2)
    println(6 % 4)
    println(6 ^ 2)
    println(6 + 2 * 3)
    println(1.0 / sin(1.0))
    println(1.0 / cos(1.0))
    println(a)
    println(true ? 5 : 0)
    println(1.0 / tan(1.0))
    # End If body -------------------------------------------------------------
else
    println(ARGS[6])
end
if boringList != nothing
    println("Ew, boring list!")
else
    println("Great, no bores!")
end
if a == 5
    global b = 10
elseif a == 0
    global b = 5
else
    global b = 0
end
for i in 0:1:9
    println(i)
end
while a < 13
    println("Hello")
    global a += 1;
end
for num in myOtherList
    println(Helper.doubleAndAdd(num, 1.0))
end
try error("Good-bye!")
catch ErrorException
    println("Caught intentional error")
end

end
