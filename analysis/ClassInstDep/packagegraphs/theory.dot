digraph theory{
ConstraintSet	[shape=oval, color=turquoise4, label="ConstraintSet"];
ScopeType	[shape=oval, color=turquoise4, label="ScopeType"];
DDPkt	[shape=oval, color=turquoise4, label="DDPkt"];
DataDefinition	[shape=oval, color=turquoise4, label="DataDefinition"];
Scope	[shape=oval, color=turquoise4, label="Scope"];
GenDefn	[shape=oval, color=turquoise4, label="GenDefn"];
InstanceModel	[shape=oval, color=turquoise4, label="InstanceModel"];
ModelKinds	[shape=oval, color=turquoise4, label="ModelKinds"];
ModelKind	[shape=oval, color=turquoise4, label="ModelKind"];
DefiningExpr	[shape=oval, color=turquoise4, label="DefiningExpr"];
MultiDefn	[shape=oval, color=turquoise4, label="MultiDefn"];
SpaceDefn	[shape=oval, color=turquoise4, label="SpaceDefn"];
TheoryModel	[shape=oval, color=turquoise4, label="TheoryModel"];
HasUID	[shape=oval, color=pink, label="HasUID"];
NamedIdea	[shape=oval, color=pink, label="NamedIdea"];
Idea	[shape=oval, color=pink, label="Idea"];
Definition	[shape=oval, color=pink, label="Definition"];
ConceptDomain	[shape=oval, color=pink, label="ConceptDomain"];
Express	[shape=oval, color=pink, label="Express"];
HasUID	[shape=oval, color=pink, label="HasUID"];
NamedIdea	[shape=oval, color=pink, label="NamedIdea"];
Idea	[shape=oval, color=pink, label="Idea"];
HasSpace	[shape=oval, color=pink, label="HasSpace"];
HasSymbol	[shape=oval, color=pink, label="HasSymbol"];
Quantity	[shape=oval, color=pink, label="Quantity"];
Express	[shape=oval, color=pink, label="Express"];
HasReference	[shape=oval, color=pink, label="HasReference"];
HasDecRef	[shape=oval, color=pink, label="HasDecRef"];
Eq	[shape=oval, color=pink, label="Eq"];
HasDerivation	[shape=oval, color=pink, label="HasDerivation"];
HasAdditionalNotes	[shape=oval, color=pink, label="HasAdditionalNotes"];
MayHaveUnit	[shape=oval, color=pink, label="MayHaveUnit"];
HasShortName	[shape=oval, color=pink, label="HasShortName"];
HasRefAddress	[shape=oval, color=pink, label="HasRefAddress"];
ConceptDomain	[shape=oval, color=pink, label="ConceptDomain"];
CommonIdea	[shape=oval, color=pink, label="CommonIdea"];
Referable	[shape=oval, color=pink, label="Referable"];
HasUID	[shape=oval, color=pink, label="HasUID"];
NamedIdea	[shape=oval, color=pink, label="NamedIdea"];
Idea	[shape=oval, color=pink, label="Idea"];
Definition	[shape=oval, color=pink, label="Definition"];
ConceptDomain	[shape=oval, color=pink, label="ConceptDomain"];
Express	[shape=oval, color=pink, label="Express"];
HasDerivation	[shape=oval, color=pink, label="HasDerivation"];
HasReference	[shape=oval, color=pink, label="HasReference"];
HasDecRef	[shape=oval, color=pink, label="HasDecRef"];
HasShortName	[shape=oval, color=pink, label="HasShortName"];
HasRefAddress	[shape=oval, color=pink, label="HasRefAddress"];
HasAdditionalNotes	[shape=oval, color=pink, label="HasAdditionalNotes"];
MayHaveUnit	[shape=oval, color=pink, label="MayHaveUnit"];
CommonIdea	[shape=oval, color=pink, label="CommonIdea"];
Referable	[shape=oval, color=pink, label="Referable"];
HasUID	[shape=oval, color=pink, label="HasUID"];
NamedIdea	[shape=oval, color=pink, label="NamedIdea"];
Idea	[shape=oval, color=pink, label="Idea"];
Definition	[shape=oval, color=pink, label="Definition"];
ConceptDomain	[shape=oval, color=pink, label="ConceptDomain"];
Express	[shape=oval, color=pink, label="Express"];
HasDerivation	[shape=oval, color=pink, label="HasDerivation"];
HasReference	[shape=oval, color=pink, label="HasReference"];
HasDecRef	[shape=oval, color=pink, label="HasDecRef"];
HasShortName	[shape=oval, color=pink, label="HasShortName"];
HasRefAddress	[shape=oval, color=pink, label="HasRefAddress"];
HasAdditionalNotes	[shape=oval, color=pink, label="HasAdditionalNotes"];
Quantity	[shape=oval, color=pink, label="Quantity"];
CommonIdea	[shape=oval, color=pink, label="CommonIdea"];
Referable	[shape=oval, color=pink, label="Referable"];
HasInputs	[shape=oval, color=pink, label="HasInputs"];
HasOutput	[shape=oval, color=pink, label="HasOutput"];
HasSymbol	[shape=oval, color=pink, label="HasSymbol"];
HasSpace	[shape=oval, color=pink, label="HasSpace"];
MayHaveUnit	[shape=oval, color=pink, label="MayHaveUnit"];
HasUID	[shape=oval, color=pink, label="HasUID"];
NamedIdea	[shape=oval, color=pink, label="NamedIdea"];
Idea	[shape=oval, color=pink, label="Idea"];
Definition	[shape=oval, color=pink, label="Definition"];
ConceptDomain	[shape=oval, color=pink, label="ConceptDomain"];
Express	[shape=oval, color=pink, label="Express"];
Eq	[shape=oval, color=pink, label="Eq"];
HasUID	[shape=oval, color=pink, label="HasUID"];
ConceptDomain	[shape=oval, color=pink, label="ConceptDomain"];
Definition	[shape=oval, color=pink, label="Definition"];
HasSymbol	[shape=oval, color=pink, label="HasSymbol"];
NamedIdea	[shape=oval, color=pink, label="NamedIdea"];
Idea	[shape=oval, color=pink, label="Idea"];
HasSpace	[shape=oval, color=pink, label="HasSpace"];
Quantity	[shape=oval, color=pink, label="Quantity"];
MayHaveUnit	[shape=oval, color=pink, label="MayHaveUnit"];
Express	[shape=oval, color=pink, label="Express"];
HasUID	[shape=oval, color=pink, label="HasUID"];
NamedIdea	[shape=oval, color=pink, label="NamedIdea"];
Idea	[shape=oval, color=pink, label="Idea"];
Definition	[shape=oval, color=pink, label="Definition"];
HasReference	[shape=oval, color=pink, label="HasReference"];
HasDecRef	[shape=oval, color=pink, label="HasDecRef"];
ConceptDomain	[shape=oval, color=pink, label="ConceptDomain"];
HasAdditionalNotes	[shape=oval, color=pink, label="HasAdditionalNotes"];
HasShortName	[shape=oval, color=pink, label="HasShortName"];
HasRefAddress	[shape=oval, color=pink, label="HasRefAddress"];
CommonIdea	[shape=oval, color=pink, label="CommonIdea"];
Referable	[shape=oval, color=pink, label="Referable"];
HasInputs	[shape=oval, color=magenta, label="HasInputs"];
HasOutput	[shape=oval, color=magenta, label="HasOutput"];
Theory	[shape=oval, color=magenta, label="Theory"];
_ConstraintSet -> HasUID;
_ConstraintSet -> NamedIdea;
_ConstraintSet -> Idea;
_ConstraintSet -> Definition;
_ConstraintSet -> ConceptDomain;
ConstraintSet_e -> Express;
DataDefinition -> HasUID;
DataDefinition -> NamedIdea;
DataDefinition -> Idea;
DataDefinition -> HasSpace;
DataDefinition -> HasSymbol;
DataDefinition -> Quantity;
DataDefinition -> Express;
DataDefinition -> HasReference;
DataDefinition -> HasDecRef;
DataDefinition -> Eq;
DataDefinition -> HasDerivation;
DataDefinition -> HasAdditionalNotes;
DataDefinition -> MayHaveUnit;
DataDefinition -> HasShortName;
DataDefinition -> HasRefAddress;
DataDefinition -> ConceptDomain;
DataDefinition -> CommonIdea;
DataDefinition -> Referable;
GenDefn -> HasUID;
GenDefn -> NamedIdea;
GenDefn -> Idea;
GenDefn -> Definition;
GenDefn -> ConceptDomain;
GenDefn -> Express;
GenDefn -> HasDerivation;
GenDefn -> HasReference;
GenDefn -> HasDecRef;
GenDefn -> HasShortName;
GenDefn -> HasRefAddress;
GenDefn -> HasAdditionalNotes;
GenDefn -> MayHaveUnit;
GenDefn -> CommonIdea;
GenDefn -> Referable;
InstanceModel -> HasUID;
InstanceModel -> NamedIdea;
InstanceModel -> Idea;
InstanceModel -> Definition;
InstanceModel -> ConceptDomain;
InstanceModel -> Express;
InstanceModel -> HasDerivation;
InstanceModel -> HasReference;
InstanceModel -> HasDecRef;
InstanceModel -> HasShortName;
InstanceModel -> HasRefAddress;
InstanceModel -> HasAdditionalNotes;
InstanceModel -> Quantity;
InstanceModel -> CommonIdea;
InstanceModel -> Referable;
InstanceModel -> HasInputs;
InstanceModel -> HasOutput;
InstanceModel -> HasSymbol;
InstanceModel -> HasSpace;
InstanceModel -> MayHaveUnit;
_ModelKinds -> HasUID;
_ModelKinds -> NamedIdea;
_ModelKinds -> Idea;
_ModelKinds -> Definition;
_ModelKinds -> ConceptDomain;
ModelKinds_e -> Express;
_ModelKind -> HasUID;
_ModelKind -> NamedIdea;
_ModelKind -> Idea;
_ModelKind -> Definition;
_ModelKind -> ConceptDomain;
ModelKind_e -> Express;
_DefiningExpr -> Eq;
_DefiningExpr -> HasUID;
_DefiningExpr -> ConceptDomain;
_DefiningExpr -> Definition;
_MultiDefn -> HasUID;
_MultiDefn -> HasSymbol;
_MultiDefn -> NamedIdea;
_MultiDefn -> Idea;
_MultiDefn -> HasSpace;
_MultiDefn -> Quantity;
_MultiDefn -> MayHaveUnit;
_MultiDefn -> ConceptDomain;
_MultiDefn -> Definition;
MultiDefn_e -> Express;
TheoryModel -> HasUID;
TheoryModel -> NamedIdea;
TheoryModel -> Idea;
TheoryModel -> Definition;
TheoryModel -> HasReference;
TheoryModel -> HasDecRef;
TheoryModel -> ConceptDomain;
TheoryModel -> HasAdditionalNotes;
TheoryModel -> Theory;
TheoryModel -> HasShortName;
TheoryModel -> HasRefAddress;
TheoryModel -> CommonIdea;
TheoryModel -> Referable;
}
