/** \file ODE.hpp
    \author Naveen Ganesh Muralidharan
    \brief Class representing an ODE system
    \note Generated by Drasil v0.1-alpha
*/

#ifndef ODE_h
#define ODE_h

#include <vector>

using std::vector;

/** \brief Class representing an ODE system
*/
class ODE {
    public:
        /** \brief Constructor for ODE objects
            \param K_p Proportional Gain
            \param K_d Derivative Gain
            \param r_t Set-Point
        */
        ODE(double K_p, double K_d, double r_t);
        /** \brief function representation of ODE system
            \param y_t Process Variable
            \param dy_t change in Process Variable
            \param t current independent variable value in ODE solution
        */
        void operator()(vector<double> y_t, vector<double> &dy_t, double t);
    
    private:
        double K_p;
        double K_d;
        double r_t;
        
};

#endif
