/** \file HelloWorld.cs
    \author Brooks MacLachlan
    \brief Tests various GOOL functions. It should run without errors.
    \note Generated by Drasil v0.1-alpha
*/

using System;
using System.Collections.Generic;

public class HelloWorld {
    
    public static void Main(string[] args) {
        // Initializing variables
        int a;
        int b = 5;
        List<double> myOtherList = new List<double> {1.0, 1.5};
        int oneIndex = myOtherList.IndexOf(1.0);
        Console.WriteLine(oneIndex);
        a = myOtherList.Count;
        myOtherList.Insert(2, 2.0);
        myOtherList.Add(2.5);
        double e;
        e = myOtherList[1];
        myOtherList[1] = 17.4;
        List<string> myName = new List<string>(7);
        myName = new List<string>("Brooks Mac".Split(' '));
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < myName.Count - 1; list_i1++) {
            Console.Write(myName[list_i1]);
            Console.Write(", ");
        }
        if (myName.Count > 0) {
            Console.Write(myName[myName.Count - 1]);
        }
        Console.WriteLine("]");
        List<Boolean> boringList = new List<Boolean> {false, false, false, false, false};
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < boringList.Count - 1; list_i1++) {
            Console.Write(boringList[list_i1]);
            Console.Write(", ");
        }
        if (boringList.Count > 0) {
            Console.Write(boringList[boringList.Count - 1]);
        }
        Console.WriteLine("]");
        
        // List slicing tests
        // Create variables for list slices
        List<double> mySlicedList = new List<double>(2);
        List<double> mySlicedList2 = new List<double>(2);
        List<double> mySlicedList3 = new List<double>(3);
        List<double> mySlicedList4 = new List<double>(0);
        List<double> mySlicedList5 = new List<double>(2);
        List<double> mySlicedList6 = new List<double>(2);
        List<double> mySlicedList7 = new List<double>(4);
        List<double> mySlicedList8 = new List<double>(3);
        List<double> mySlicedList9 = new List<double>(2);
        List<double> mySlicedList10 = new List<double>(3);
        List<double> mySlicedList11 = new List<double>(0);
        
        // Create some variables for later tests
        int x = 3;
        int y = 1;
        int z = -1;
        
        List<double> temp = new List<double>(0);
        for (int i = 1; i < 3; i++) {
            temp.Add(myOtherList[i]);
        }
        mySlicedList = temp;
        
        List<double> temp0 = new List<double>(0);
        for (int j = 1; j < 4; j += 2) {
            temp0.Add(myOtherList[j]);
        }
        mySlicedList2 = temp0;
        
        List<double> temp1 = new List<double>(0);
        for (int k = 1; k < myOtherList.Count; k++) {
            temp1.Add(myOtherList[k]);
        }
        mySlicedList3 = temp1;
        
        List<double> temp2 = new List<double>(0);
        for (int i0 = 3; i0 < 1; i0++) {
            temp2.Add(myOtherList[i0]);
        }
        mySlicedList4 = temp2;
        
        List<double> temp3 = new List<double>(0);
        for (int i1 = 3; i1 > 1; i1 += -1) {
            temp3.Add(myOtherList[i1]);
        }
        mySlicedList5 = temp3;
        
        List<double> temp4 = new List<double>(0);
        for (int i2 = myOtherList.Count - 1; i2 > 1; i2 += -1) {
            temp4.Add(myOtherList[i2]);
        }
        mySlicedList6 = temp4;
        
        List<double> temp5 = new List<double>(0);
        for (int i3 = 3; i3 > -1; i3 += -1) {
            temp5.Add(myOtherList[i3]);
        }
        mySlicedList7 = temp5;
        
        List<double> temp6 = new List<double>(0);
        for (int i4 = 3; 0 < i4 && i4 <= 3 && z < 0; i4 += z) {
            temp6.Add(myOtherList[i4]);
        }
        mySlicedList8 = temp6;
        
        List<double> temp7 = new List<double>(0);
        for (int i5 = x; x <= i5 && i5 < y && z > 0 || y < i5 && i5 <= x && z < 0; i5 += z) {
            temp7.Add(myOtherList[i5]);
        }
        mySlicedList9 = temp7;
        
        List<double> temp8 = new List<double>(0);
        int endIdx = z > 0 ? myOtherList.Count : -1;
        for (int i6 = 2; 2 <= i6 && i6 < endIdx && z > 0 || endIdx < i6 && i6 <= 2 && z < 0; i6 += z) {
            temp8.Add(myOtherList[i6]);
        }
        mySlicedList10 = temp8;
        
        List<double> temp9 = new List<double>(0);
        for (int i7 = y; y <= i7 && i7 < x && z > 0 || x < i7 && i7 <= y && z < 0; i7 += z) {
            temp9.Add(myOtherList[i7]);
        }
        mySlicedList11 = temp9;
        
        // Print results of list slicing tests
        Console.WriteLine("");
        Console.WriteLine("List slicing:");
        Console.Write("myOtherList: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < myOtherList.Count - 1; list_i1++) {
            Console.Write(myOtherList[list_i1]);
            Console.Write(", ");
        }
        if (myOtherList.Count > 0) {
            Console.Write(myOtherList[myOtherList.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList.Count - 1; list_i1++) {
            Console.Write(mySlicedList[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList.Count > 0) {
            Console.Write(mySlicedList[mySlicedList.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList2: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList2.Count - 1; list_i1++) {
            Console.Write(mySlicedList2[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList2.Count > 0) {
            Console.Write(mySlicedList2[mySlicedList2.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList3: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList3.Count - 1; list_i1++) {
            Console.Write(mySlicedList3[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList3.Count > 0) {
            Console.Write(mySlicedList3[mySlicedList3.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList4: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList4.Count - 1; list_i1++) {
            Console.Write(mySlicedList4[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList4.Count > 0) {
            Console.Write(mySlicedList4[mySlicedList4.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList5: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList5.Count - 1; list_i1++) {
            Console.Write(mySlicedList5[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList5.Count > 0) {
            Console.Write(mySlicedList5[mySlicedList5.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList6: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList6.Count - 1; list_i1++) {
            Console.Write(mySlicedList6[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList6.Count > 0) {
            Console.Write(mySlicedList6[mySlicedList6.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList7: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList7.Count - 1; list_i1++) {
            Console.Write(mySlicedList7[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList7.Count > 0) {
            Console.Write(mySlicedList7[mySlicedList7.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList8: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList8.Count - 1; list_i1++) {
            Console.Write(mySlicedList8[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList8.Count > 0) {
            Console.Write(mySlicedList8[mySlicedList8.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList9: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList9.Count - 1; list_i1++) {
            Console.Write(mySlicedList9[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList9.Count > 0) {
            Console.Write(mySlicedList9[mySlicedList9.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList10: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList10.Count - 1; list_i1++) {
            Console.Write(mySlicedList10[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList10.Count > 0) {
            Console.Write(mySlicedList10[mySlicedList10.Count - 1]);
        }
        Console.WriteLine("]");
        Console.Write("mySlicedList11: ");
        Console.Write("[");
        for (int list_i1 = 0; list_i1 < mySlicedList11.Count - 1; list_i1++) {
            Console.Write(mySlicedList11[list_i1]);
            Console.Write(", ");
        }
        if (mySlicedList11.Count > 0) {
            Console.Write(mySlicedList11[mySlicedList11.Count - 1]);
        }
        Console.WriteLine("]");
        
        Console.WriteLine("");
        if (b >= 6) {
            string dummy = "dummy";
        }
        else if (b == 5) {
            // If body ----------------------------------------------------------------
            int c;
            int d;
            a = 5;
            b = a + 2;
            c = b + 3;
            d = b;
            d -= a;
            c -= d;
            b += 17;
            c += 17;
            a++;
            d++;
            c--;
            b--;
            List<int> myList = new List<int>(5);
            char myObj = 'o';
            const string myConst = "Imconstant";
            Console.WriteLine(a);
            Console.WriteLine(b);
            Console.WriteLine(c);
            Console.WriteLine(d);
            Console.Write("[");
            for (int list_i1 = 0; list_i1 < myOtherList.Count - 1; list_i1++) {
                Console.Write(myOtherList[list_i1]);
                Console.Write(", ");
            }
            if (myOtherList.Count > 0) {
                Console.Write(myOtherList[myOtherList.Count - 1]);
            }
            Console.WriteLine("]");
            Console.Write("[");
            for (int list_i1 = 0; list_i1 < mySlicedList.Count - 1; list_i1++) {
                Console.Write(mySlicedList[list_i1]);
                Console.Write(", ");
            }
            if (mySlicedList.Count > 0) {
                Console.Write(mySlicedList[mySlicedList.Count - 1]);
            }
            Console.WriteLine("]");
            Console.WriteLine("Type an int");
            d = Int32.Parse(Console.ReadLine());
            Console.WriteLine("Type another");
            Console.ReadLine();
            
            Console.WriteLine(" too");
            Console.Write("boo");
            Console.Write(true);
            Console.Write(0);
            Console.Write('c');
            Console.WriteLine(!(true));
            Console.WriteLine(-1);
            Console.WriteLine(Math.Sqrt(4.0));
            Console.WriteLine(Math.Abs(-4));
            Console.WriteLine(Math.Log10(2.0));
            Console.WriteLine(Math.Log(2.0));
            Console.WriteLine(Math.Exp(-2.0));
            Console.WriteLine(Math.Sin(2.0));
            Console.WriteLine(Math.Cos(2.0));
            Console.WriteLine(Math.Tan(2.0));
            Console.WriteLine(Math.Tan(2.0));
            Console.WriteLine(true && false);
            Console.WriteLine(true || false);
            Console.WriteLine(true && !(false));
            Console.WriteLine(!(true && true));
            Console.WriteLine(6 + 2);
            Console.WriteLine(6 - 2);
            Console.WriteLine(6 * 2);
            Console.WriteLine(6 / 2);
            Console.WriteLine(6 % 4);
            Console.WriteLine(Math.Pow(6, 2));
            Console.WriteLine(6 + 2 * 3);
            Console.WriteLine(1.0 / Math.Sin(1.0));
            Console.WriteLine(1.0 / Math.Cos(1.0));
            Console.WriteLine(a);
            Console.WriteLine(true ? 5 : 0);
            Console.WriteLine(1.0 / Math.Tan(1.0));
            // End If body ------------------------------------------------------------
        }
        else {
            Console.WriteLine(args[5]);
        }
        if (boringList != null) {
            Console.WriteLine("Ew, boring list!");
        }
        else {
            Console.WriteLine("Great, no bores!");
        }
        switch(a) {
            case 5:
                b = 10;
                break;
            case 0:
                b = 5;
                break;
            default:
                b = 0;
                break;
        };
        for (int i = 0; i < 9; i += 1) {
            Console.WriteLine(i);
        }
        while (a < 13) {
            Console.WriteLine("Hello");
            a++;
        }
        foreach (double num in myOtherList) {
            Console.WriteLine(Helper.doubleAndAdd(num, 1.0));
        }
        try {
            throw new Exception("Good-bye!");
        } catch {
            Console.WriteLine("Caught intentional error");
        }
    }
}
