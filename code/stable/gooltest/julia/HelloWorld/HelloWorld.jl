""" HelloWorld.jl
    Tests various GOOL functions. It should run without errors.
    - Authors: Brooks MacLachlan
    - Note: Generated by Drasil v0.1-alpha
"""

module HelloWorld

include("Helper.jl")
import .Helper

# Initializing variables
b = 5
myOtherList = [1.0, 1.5]
oneIndex = findfirst(x -> x == 1.0, myOtherList) - 1
println(oneIndex)
a = length(myOtherList)
insert!(myOtherList, 3, 2.0)
append!(myOtherList, 2.5)
e = myOtherList[2]
myOtherList[2] = 17.4
myName = []
myName = split("Brooks Mac", " ")
println(myName)
boringList = [false, false, false, false, false]
println(boringList)

# List slicing tests
# Create variables for list slices
mySlicedList = []
mySlicedList2 = []
mySlicedList3 = []
mySlicedList4 = []
mySlicedList5 = []
mySlicedList6 = []
mySlicedList7 = []
mySlicedList8 = []
mySlicedList9 = []
mySlicedList10 = []
mySlicedList11 = []

# Create some variables for later tests
x = 3
y = 1
z = -1

mySlicedList = myOtherList[2:3]

mySlicedList2 = myOtherList[2:2:4]

mySlicedList3 = myOtherList[2:end]

mySlicedList4 = myOtherList[4:1]

mySlicedList5 = myOtherList[4:-1:3]

mySlicedList6 = myOtherList[end:-1:3]

mySlicedList7 = myOtherList[4:-1:begin]

endIdx = z > 0 ? 0 : 2
mySlicedList8 = myOtherList[4:z:endIdx]

endIdx0 = z > 0 ? y : y + 2
mySlicedList9 = myOtherList[x + 1:z:endIdx0]

endIdx1 = z > 0 ? length(myOtherList) : 1
mySlicedList10 = myOtherList[3:z:endIdx1]

endIdx2 = z > 0 ? length(myOtherList) : 1
mySlicedList10 = myOtherList[3:z:endIdx2]

endIdx3 = z > 0 ? x : x + 2
mySlicedList11 = myOtherList[y + 1:z:endIdx3]

# Print results of list slicing tests
println("")
println("List slicing:")
print("myOtherList: ")
println(myOtherList)
print("mySlicedList: ")
println(mySlicedList)
print("mySlicedList2: ")
println(mySlicedList2)
print("mySlicedList3: ")
println(mySlicedList3)
print("mySlicedList4: ")
println(mySlicedList4)
print("mySlicedList5: ")
println(mySlicedList5)
print("mySlicedList6: ")
println(mySlicedList6)
print("mySlicedList7: ")
println(mySlicedList7)
print("mySlicedList8: ")
println(mySlicedList8)
print("mySlicedList9: ")
println(mySlicedList9)
print("mySlicedList10: ")
println(mySlicedList10)
print("mySlicedList11: ")
println(mySlicedList11)

println("")
if b >= 6
    dummy = "dummy"
elseif b == 5
    # If body -----------------------------------------------------------------
    a = 5
    b = a + 2
    c = b + 3
    d = b
    d -= a
    c -= d
    b += 17;
    c += 17;
    a += 1;
    d += 1;
    c -= 1
    b -= 1
    myList = []
    myConst = "Imconstant";
    println(a)
    println(b)
    println(c)
    println(d)
    println(myOtherList)
    println(mySlicedList)
    println("Type an int")
    d = parse(Int64, readline())
    println("Type another")
    readline()
    
    println(" too")
    print("boo")
    print(true)
    print(0)
    print('c')
    println(!(true))
    println(-1)
    println(sqrt(4.0))
    println(abs(-4))
    println(log10(2.0))
    println(log(2.0))
    println(exp(-2.0))
    println(sin(2.0))
    println(cos(2.0))
    println(tan(2.0))
    println(tan(2.0))
    println(true && false)
    println(true || false)
    println(true && !(false))
    println(!(true && true))
    println(6 + 2)
    println(6 - 2)
    println(6 * 2)
    println(6 รท 2)
    println(6 % 4)
    println(6 ^ 2)
    println(6 + 2 * 3)
    println(1.0 / sin(1.0))
    println(1.0 / cos(1.0))
    println(a)
    println(true ? 5 : 0)
    println(1.0 / tan(1.0))
    # End If body -------------------------------------------------------------
else
    println(ARGS[6])
end
if boringList != nothing
    println("Ew, boring list!")
else
    println("Great, no bores!")
end
if a == 5
    b = 10
elseif a == 0
    b = 5
else
    b = 0
end
for i in 0:1:9
    println(i)
end
while a < 13
    println("Hello")
    a += 1;
end
for num in myOtherList
    println(Helper.doubleAndAdd(num, 1.0))
end
try error("Good-bye!")
catch ErrorException
    println("Caught intentional error")
end

end
