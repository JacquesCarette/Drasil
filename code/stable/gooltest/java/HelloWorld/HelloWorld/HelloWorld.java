package HelloWorld;

/** \file HelloWorld.java
    \author Brooks MacLachlan
    \brief Tests various GOOL functions. It should run without errors.
    \note Generated by Drasil v0.1-alpha
*/

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class HelloWorld {
    
    public static void main(String[] args) {
        // Initializing variables
        int a;
        int b = 5;
        ArrayList<Double> myOtherList = new ArrayList<Double>(Arrays.asList(1.0, 1.5));
        int oneIndex = myOtherList.indexOf(1.0);
        System.out.println(oneIndex);
        a = myOtherList.size();
        myOtherList.add(2, 2.0);
        myOtherList.add(2.5);
        double e;
        e = myOtherList.get(1);
        myOtherList.set(1, 17.4);
        ArrayList<String> myName = new ArrayList<String>(7);
        myName = new ArrayList<String>(Arrays.asList("Brooks Mac".split(" ")));
        System.out.println(myName);
        ArrayList<Boolean> boringList = new ArrayList<Boolean>(Arrays.asList(false, false, false, false, false));
        System.out.println(boringList);
        
        // List slicing tests
        // Create variables for list slices
        ArrayList<Double> mySlicedList = new ArrayList<Double>(2);
        ArrayList<Double> mySlicedList2 = new ArrayList<Double>(2);
        ArrayList<Double> mySlicedList3 = new ArrayList<Double>(3);
        ArrayList<Double> mySlicedList4 = new ArrayList<Double>(0);
        ArrayList<Double> mySlicedList5 = new ArrayList<Double>(2);
        ArrayList<Double> mySlicedList6 = new ArrayList<Double>(2);
        ArrayList<Double> mySlicedList7 = new ArrayList<Double>(4);
        ArrayList<Double> mySlicedList8 = new ArrayList<Double>(3);
        ArrayList<Double> mySlicedList9 = new ArrayList<Double>(2);
        ArrayList<Double> mySlicedList10 = new ArrayList<Double>(3);
        ArrayList<Double> mySlicedList11 = new ArrayList<Double>(0);
        
        // Create some variables for later tests
        int x = 3;
        int y = 1;
        int z = -1;
        
        ArrayList<Double> temp = new ArrayList<Double>(0);
        for (int i = 1; i < 3; i++) {
            temp.add(myOtherList.get(i));
        }
        mySlicedList = temp;
        
        ArrayList<Double> temp0 = new ArrayList<Double>(0);
        for (int j = 1; j < 4; j += 2) {
            temp0.add(myOtherList.get(j));
        }
        mySlicedList2 = temp0;
        
        ArrayList<Double> temp1 = new ArrayList<Double>(0);
        for (int k = 1; k < myOtherList.size(); k++) {
            temp1.add(myOtherList.get(k));
        }
        mySlicedList3 = temp1;
        
        ArrayList<Double> temp2 = new ArrayList<Double>(0);
        for (int i0 = 3; i0 < 1; i0++) {
            temp2.add(myOtherList.get(i0));
        }
        mySlicedList4 = temp2;
        
        ArrayList<Double> temp3 = new ArrayList<Double>(0);
        for (int i1 = 3; i1 > 1; i1 += -1) {
            temp3.add(myOtherList.get(i1));
        }
        mySlicedList5 = temp3;
        
        ArrayList<Double> temp4 = new ArrayList<Double>(0);
        for (int i2 = myOtherList.size() - 1; i2 > 1; i2 += -1) {
            temp4.add(myOtherList.get(i2));
        }
        mySlicedList6 = temp4;
        
        ArrayList<Double> temp5 = new ArrayList<Double>(0);
        for (int i3 = 3; i3 > -1; i3 += -1) {
            temp5.add(myOtherList.get(i3));
        }
        mySlicedList7 = temp5;
        
        ArrayList<Double> temp6 = new ArrayList<Double>(0);
        for (int i4 = 3; 0 < i4 && i4 <= 3 && z < 0; i4 += z) {
            temp6.add(myOtherList.get(i4));
        }
        mySlicedList8 = temp6;
        
        ArrayList<Double> temp7 = new ArrayList<Double>(0);
        for (int i5 = x; x <= i5 && i5 < y && z > 0 || y < i5 && i5 <= x && z < 0; i5 += z) {
            temp7.add(myOtherList.get(i5));
        }
        mySlicedList9 = temp7;
        
        ArrayList<Double> temp8 = new ArrayList<Double>(0);
        int endIdx = z > 0 ? myOtherList.size() : -1;
        for (int i6 = 2; 2 <= i6 && i6 < endIdx && z > 0 || endIdx < i6 && i6 <= 2 && z < 0; i6 += z) {
            temp8.add(myOtherList.get(i6));
        }
        mySlicedList10 = temp8;
        
        ArrayList<Double> temp9 = new ArrayList<Double>(0);
        int endIdx0 = z > 0 ? myOtherList.size() : -1;
        for (int i7 = 2; 2 <= i7 && i7 < endIdx0 && z > 0 || endIdx0 < i7 && i7 <= 2 && z < 0; i7 += z) {
            temp9.add(myOtherList.get(i7));
        }
        mySlicedList10 = temp9;
        
        ArrayList<Double> temp10 = new ArrayList<Double>(0);
        for (int i8 = y; y <= i8 && i8 < x && z > 0 || x < i8 && i8 <= y && z < 0; i8 += z) {
            temp10.add(myOtherList.get(i8));
        }
        mySlicedList11 = temp10;
        
        // Print results of list slicing tests
        System.out.println("");
        System.out.println("List slicing:");
        System.out.print("myOtherList: ");
        System.out.println(myOtherList);
        System.out.print("mySlicedList: ");
        System.out.println(mySlicedList);
        System.out.print("mySlicedList2: ");
        System.out.println(mySlicedList2);
        System.out.print("mySlicedList3: ");
        System.out.println(mySlicedList3);
        System.out.print("mySlicedList4: ");
        System.out.println(mySlicedList4);
        System.out.print("mySlicedList5: ");
        System.out.println(mySlicedList5);
        System.out.print("mySlicedList6: ");
        System.out.println(mySlicedList6);
        System.out.print("mySlicedList7: ");
        System.out.println(mySlicedList7);
        System.out.print("mySlicedList8: ");
        System.out.println(mySlicedList8);
        System.out.print("mySlicedList9: ");
        System.out.println(mySlicedList9);
        System.out.print("mySlicedList10: ");
        System.out.println(mySlicedList10);
        System.out.print("mySlicedList11: ");
        System.out.println(mySlicedList11);
        
        System.out.println("");
        if (b >= 6) {
            String dummy = "dummy";
        }
        else if (b == 5) {
            // If body ----------------------------------------------------------------
            int c;
            int d;
            a = 5;
            b = a + 2;
            c = b + 3;
            d = b;
            d -= a;
            c -= d;
            b += 17;
            c += 17;
            a++;
            d++;
            c--;
            b--;
            ArrayList<Integer> myList = new ArrayList<Integer>(5);
            final String myConst = "Imconstant";
            System.out.println(myConst);
            System.out.println(a);
            System.out.println(b);
            System.out.println(c);
            System.out.println(d);
            System.out.println(myOtherList);
            System.out.println(mySlicedList);
            System.out.println("Type an int");
            d = Integer.parseInt((new Scanner(System.in)).nextLine());
            System.out.println("Type another");
            (new Scanner(System.in)).next();
            
            System.out.println(" too");
            System.out.print("boo");
            System.out.print(true);
            System.out.print(0);
            System.out.print('c');
            System.out.println(!(true));
            System.out.println(-1);
            System.out.println(Math.sqrt(4.0));
            System.out.println(Math.abs(-4));
            System.out.println(Math.log10(2.0));
            System.out.println(Math.log(2.0));
            System.out.println(Math.exp(-2.0));
            System.out.println(Math.sin(2.0));
            System.out.println(Math.cos(2.0));
            System.out.println(Math.tan(2.0));
            System.out.println(Math.tan(2.0));
            System.out.println(true && false);
            System.out.println(true || false);
            System.out.println(true && !(false));
            System.out.println(!(true && true));
            System.out.println(6 + 2);
            System.out.println(6 - 2);
            System.out.println(6 * 2);
            System.out.println(6 / 2);
            System.out.println(6 % 4);
            System.out.println(Math.pow(6, 2));
            System.out.println(6 + 2 * 3);
            System.out.println(1.0 / Math.sin(1.0));
            System.out.println(1.0 / Math.cos(1.0));
            System.out.println(a);
            System.out.println(true ? 5 : 0);
            System.out.println(1.0 / Math.tan(1.0));
            // End If body ------------------------------------------------------------
        }
        else {
            System.out.println(args[5]);
        }
        if (boringList != null) {
            System.out.println("Ew, boring list!");
        }
        else {
            System.out.println("Great, no bores!");
        }
        switch(a) {
            case 5:
                b = 10;
                break;
            case 0:
                b = 5;
                break;
            default:
                b = 0;
                break;
        };
        for (int i = 0; i < 9; i += 1) {
            System.out.println(i);
        }
        while (a < 13) {
            System.out.println("Hello");
            a++;
        }
        for (double num : myOtherList) {
            System.out.println(Helper.doubleAndAdd(num, 1.0));
        }
        try {
            throw new Exception("Good-bye!");
        } catch (Exception exc) {
            System.out.println("Caught intentional error");
        }
    }
}
