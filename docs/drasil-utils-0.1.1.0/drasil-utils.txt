-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A framework for code and document generation for scientific software - Utils SubPackage
--   
--   Please see the README on GitHub at
--   <a>https://github.com/JacquesCarette/Drasil#readme</a>
@package drasil-utils
@version 0.1.1.0


-- | Common <a>Doc</a>-related functions for writting printers with a
--   little more clarity.
module Utils.Drasil.Document

-- | Creates a blank document with no text.
blank :: Doc

-- | Indents a document (by 4 spaces).
indent :: Doc -> Doc

-- | Helper which concatenates two Docs and appends a period.
(+:+.) :: Doc -> Doc -> Doc

-- | Indents a list of Docs and combines into one Doc.
indentList :: [Doc] -> Doc


-- | Gather Drasil's utility functions and re-export for easy use. For now,
--   does not include combinators (Sentence.hs, NounPhrase.hs, Concepts.hs)
module Utils.Drasil

-- | Creates a blank document with no text.
blank :: Doc

-- | Indents a document (by 4 spaces).
indent :: Doc -> Doc

-- | Indents a list of Docs and combines into one Doc.
indentList :: [Doc] -> Doc

-- | String capitalization.
capitalize :: String -> String

-- | Comma separated list with "and" before final item.
stringList :: [String] -> String

-- | Replaces all elements of a target list that belong to a provided "bad"
--   input list.
replaceAll :: Eq a => [a] -> a -> [a] -> [a]

-- | Checks if the first set is a subset of the second.
subsetOf :: Eq a => [a] -> [a] -> Bool

-- | Sort a list, removing all duplicates
nubSort :: Ord a => [a] -> [a]

-- | Interweaves two lists together <tt>[[a,b,c],[d,e,f]] -&gt;
--   [a,d,b,e,c,f]</tt>.
weave :: [[a]] -> [a]

-- | Fold helper function that applies f to all but the last element,
--   applies g to last element and the accumulator.
foldle :: (a -> a -> a) -> (a -> a -> a) -> a -> [a] -> a

-- | Fold helper function that applies f to all but last element, applies g
--   to last element and accumulator without starting value, does not work
--   for empty list.
foldle1 :: (a -> a -> a) -> (a -> a -> a) -> [a] -> a

-- | Replace occurences of special characters
--   (<tt>",~`-=!</tt>#$%^&amp;*+[]\;'/|"&lt;&gt;? "<tt>) with underscores
--   (</tt>"_"@).
--   
--   TODO: This can probably become a bit more comprehensive, anything
--   other than a-z, A-Z, or 0-9 could probably be replaced.
toPlainName :: String -> String
