digraph avsall {


	twoDMotion	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:twoDMotion"];
	cartSys	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:cartSys"];
	cartSysR	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:cartSysR"];
	yAxisDir	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:yAxisDir"];
	startOrigin	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:startOrigin"];
	firstPend	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:firstPend"];
	secondPend	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:secondPend"];

	subgraph A {
	rank="same"
	{twoDMotion, cartSys, cartSysR, yAxisDir, startOrigin, firstPend, secondPend}
	}

	velocity	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:positionGDD"];
	p_x1	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:positionXDD1"];
	p_y1	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:positionYDD1"];
	p_x2	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:positionXDD2"];
	p_y2	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:positionYDD2"];
	acceleration	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:accelerationGDD"];
	force	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:forceGDD"];

	subgraph DD {
	rank="same"
	{velocity, p_x1, p_y1, p_x2, p_y2, acceleration, force}
	}

	accelerationTM	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:acceleration"];
	velocityTM	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:velocity"];
	newtonSL	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:NewtonSecLawMot"];

	subgraph TM {
	rank="same"
	{accelerationTM, velocityTM, newtonSL}
	}

	theory:v_x1	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:velocityX1"];
	theory:v_y1	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:velocityY1"];
	theory:v_x2	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:velocityX2"];
	theory:v_y2	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:velocityY2"];
	theory:a_x1	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:accelerationX1"];
	theory:a_y1	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:accelerationY1"];
	theory:a_x2	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:accelerationX2"];
	theory:a_y2	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:accelerationY2"];
	xForce1	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:xForce1"];
	yForce1	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:yForce1"];
	xForce2	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:xForce2"];
	yForce2	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:yForce2"];

	subgraph GD {
	rank="same"
	{theory:v_x1, theory:v_y1, theory:v_x2, theory:v_y2, theory:a_x1, theory:a_y1, theory:a_x2, theory:a_y2, xForce1, yForce1, xForce2, yForce2}
	}

	angleIM1	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:calOfAngle1"];
	angleIM2	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:calOfAngle2"];

	subgraph IM {
	rank="same"
	{angleIM1, angleIM2}
	}

	inputValues	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:inputValues"];
	verifyInptVals	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:verifyInptVals"];
	calcAng	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:calcAng"];
	outputValues	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:outputValues"];
	correct	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:correct"];
	portable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:portable"];

	subgraph FR {
	rank="same"
	{inputValues, verifyInptVals, calcAng, outputValues, correct, portable}
	}

}
