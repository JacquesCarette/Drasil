digraph allvsall {
	alpha_i -> assumpSBSBISL;
	beta_i -> assumpSBSBISL;
	l_bi -> alpha_i;
	l_bi -> b_i;
	l_si -> beta_i;
	l_si -> b_i;
	h_i -> assumpSBSBISL;
	h_i -> hR;
	h_i -> hL;
	Phi -> alpha_i;
	Phi -> f_i;
	Psi -> alpha_i;
	Psi -> f_i;
	Psi -> Phi;
	equilibriumCSMK -> assumpENSL;
	mcShrSrgthMK -> assumpSBSBISL;
	effectiveStressTMMK -> sigma;
	normForcEqMK -> alpha_i;
	normForcEqMK -> beta_i;
	normForcEqMK -> equilibriumCSMK;
	normForcEqMK -> sliceWghtMK;
	normForcEqMK -> srfWtrFMK;
	bsShrFEqMK -> alpha_i;
	bsShrFEqMK -> beta_i;
	bsShrFEqMK -> equilibriumCSMK;
	bsShrFEqMK -> sliceWghtMK;
	bsShrFEqMK -> srfWtrFMK;
	resShrMK -> assumpSLH;
	resShrMK -> assumpSP;
	resShrMK -> assumpSLI;
	resShrMK -> assumpPSC;
	resShrMK -> l_bi;
	resShrMK -> sigma;
	resShrMK -> tau;
	resShrMK -> mcShrSrgthMK;
	mobShrMK -> assumpFOS;
	mobShrMK -> l_bi;
	mobShrMK -> factOfSafetyTMMK;
	mobShrMK -> resShrMK;
	effNormFMK -> assumpPSC;
	effNormFMK -> sigma;
	effNormFMK -> effectiveStressTMMK;
	effNormFMK -> baseWtrFMK;
	resShearWOMK -> H_i;
	resShearWOMK -> alpha_i;
	resShearWOMK -> beta_i;
	resShearWOMK -> l_bi;
	resShearWOMK -> sliceWghtMK;
	resShearWOMK -> baseWtrFMK;
	resShearWOMK -> srfWtrFMK;
	mobShearWOMK -> H_i;
	mobShearWOMK -> alpha_i;
	mobShearWOMK -> beta_i;
	mobShearWOMK -> sliceWghtMK;
	mobShearWOMK -> srfWtrFMK;
	X_iMK -> assumpINSFL;
	X_iMK -> f_i;
	momentEqlMK -> assumpNESSS;
	momentEqlMK -> assumpHFSM;
	momentEqlMK -> alpha_i;
	momentEqlMK -> beta_i;
	momentEqlMK -> b_i;
	momentEqlMK -> h_i;
	momentEqlMK -> torque;
	momentEqlMK -> equilibriumCSMK;
	momentEqlMK -> weightMK;
	momentEqlMK -> sliceWghtMK;
	momentEqlMK -> srfWtrFMK;
	weightMK -> newtonSLMK;
	sliceWghtMK -> assumpSLH;
	sliceWghtMK -> assumpPSC;
	sliceWghtMK -> assumpSBSBISL;
	sliceWghtMK -> assumpWIBE;
	sliceWghtMK -> assumpWISE;
	sliceWghtMK -> b_i;
	sliceWghtMK -> weightMK;
	baseWtrFMK -> assumpPSC;
	baseWtrFMK -> assumpSBSBISL;
	baseWtrFMK -> assumpWIBE;
	baseWtrFMK -> assumpHFSM;
	baseWtrFMK -> l_bi;
	baseWtrFMK -> pressureMK;
	baseWtrFMK -> baseWtrFMK;
	srfWtrFMK -> assumpPSC;
	srfWtrFMK -> assumpSBSBISL;
	srfWtrFMK -> assumpWISE;
	srfWtrFMK -> assumpHFSM;
	srfWtrFMK -> l_si;
	srfWtrFMK -> pressureMK;
	srfWtrFMK -> srfWtrFMK;
	FSMK -> assumpINSFL;
	FSMK -> assumpES;
	FSMK -> assumpSF;
	FSMK -> assumpSL;
	FSMK -> Phi;
	FSMK -> Psi;
	FSMK -> normForcEqMK;
	FSMK -> bsShrFEqMK;
	FSMK -> mobShrMK;
	FSMK -> resShearWOMK;
	FSMK -> mobShearWOMK;
	FSMK -> X_iMK;
	FSMK -> FSMK;
	FSMK -> nrmShrForIMMK;
	FSMK -> intsliceFsRCMK;
	nrmShrForIMMK -> assumpINSFL;
	nrmShrForIMMK -> assumpES;
	nrmShrForIMMK -> assumpSF;
	nrmShrForIMMK -> assumpSL;
	nrmShrForIMMK -> X_iMK;
	nrmShrForIMMK -> momentEqlMK;
	nrmShrForIMMK -> FSMK;
	nrmShrForIMMK -> nrmShrForIMMK;
	nrmShrForIMMK -> nrmShrForNumRCMK;
	nrmShrForIMMK -> nrmShrForDenRCMK;
	nrmShrForIMMK -> intsliceFsRCMK;
	nrmShrForNumRCMK -> H_i;
	nrmShrForNumRCMK -> alpha_i;
	nrmShrForNumRCMK -> beta_i;
	nrmShrForNumRCMK -> b_i;
	nrmShrForNumRCMK -> h_i;
	nrmShrForNumRCMK -> srfWtrFMK;
	nrmShrForNumRCMK -> nrmShrForIMMK;
	nrmShrForDenRCMK -> b_i;
	nrmShrForDenRCMK -> f_i;
	nrmShrForDenRCMK -> nrmShrForIMMK;
	intsliceFsRCMK -> assumpES;
	intsliceFsRCMK -> Phi;
	intsliceFsRCMK -> Psi;
	intsliceFsRCMK -> resShearWOMK;
	intsliceFsRCMK -> mobShearWOMK;
	intsliceFsRCMK -> FSMK;
	intsliceFsRCMK -> nrmShrForIMMK;
	intsliceFsRCMK -> intsliceFsRCMK;
	crtSlpIdIMMK -> assumpSSC;
	determineCritSlip -> FSMK;
	determineCritSlip -> nrmShrForIMMK;
	determineCritSlip -> intsliceFsRCMK;
	determineCritSlip -> crtSlpIdIMMK;
	displayGraph -> crtSlpIdIMMK;
	displayFS -> FSMK;
	displayFS -> nrmShrForIMMK;
	displayFS -> intsliceFsRCMK;
	displayNormal -> FSMK;
	displayNormal -> nrmShrForIMMK;
	displayNormal -> intsliceFsRCMK;
	displayShear -> FSMK;
	displayShear -> nrmShrForIMMK;
	displayShear -> intsliceFsRCMK;
	writeToFile -> displayInput;
	writeToFile -> displayGraph;
	writeToFile -> displayFS;
	writeToFile -> displayNormal;
	writeToFile -> displayShear;
	LC_inhomogeneous -> assumpSLH;
	LC_seismic -> assumpSF;
	LC_external -> assumpSL;
	UC_normshearlinear -> assumpINSFL;
	UC_2donly -> assumpENSL;


	assumpSSC	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSSC"];
	assumpFOS	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpFOS"];
	assumpSLH	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSLH"];
	assumpSP	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSP"];
	assumpSLI	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSLI"];
	assumpINSFL	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpINSFL"];
	assumpPSC	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpPSC"];
	assumpENSL	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpENSL"];
	assumpSBSBISL	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSBSBISL"];
	assumpES	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpES"];
	assumpSF	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSF"];
	assumpSL	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSL"];
	assumpWIBE	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpWIBE"];
	assumpWISE	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpWISE"];
	assumpNESSS	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpNESSS"];
	assumpHFSM	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpHFSM"];

	subgraph A {
	rank="same"
	{assumpSSC, assumpFOS, assumpSLH, assumpSP, assumpSLI, assumpINSFL, assumpPSC, assumpENSL, assumpSBSBISL, assumpES, assumpSF, assumpSL, assumpWIBE, assumpWISE, assumpNESSS, assumpHFSM}
	}

	H_i	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:intersliceWtrF"];
	alpha_i	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:angleA"];
	beta_i	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:angleB"];
	b_i	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:lengthB"];
	l_bi	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:lengthLb"];
	l_si	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:lengthLs"];
	h_i	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:slcHeight"];
	sigma	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:normStress"];
	tau	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:tangStress"];
	torque	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:torque"];
	f_i	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:ratioVariation"];
	Phi	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:convertFunc1"];
	Psi	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:convertFunc2"];
	F_xG	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:nrmForceSumDD"];
	F_xH	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:watForceSumDD"];
	hR	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:sliceHghtRightDD"];
	hL	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:sliceHghtLeftDD"];

	subgraph DD {
	rank="same"
	{H_i, alpha_i, beta_i, b_i, l_bi, l_si, h_i, sigma, tau, torque, f_i, Phi, Psi, F_xG, F_xH, hR, hL}
	}

	factOfSafetyTMMK	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:factOfSafety"];
	equilibriumCSMK	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:equilibrium"];
	mcShrSrgthMK	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:mcShrStrgth"];
	effectiveStressTMMK	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:effStress"];
	newtonSLMK	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:NewtonSecLawMot"];

	subgraph TM {
	rank="same"
	{factOfSafetyTMMK, equilibriumCSMK, mcShrSrgthMK, effectiveStressTMMK, newtonSLMK}
	}

	normForcEqMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:normForcEq"];
	bsShrFEqMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:bsShrFEq"];
	resShrMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:resShr"];
	mobShrMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:mobShr"];
	effNormFMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:effNormF"];
	resShearWOMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:resShearWO"];
	mobShearWOMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:mobShearWO"];
	X_iMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:normShrR"];
	momentEqlMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:momentEql"];
	weightMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:weight"];
	sliceWghtMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:sliceWght"];
	pressureMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:hsPressure"];
	baseWtrFMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:baseWtrF"];
	srfWtrFMK	[shape=box, color=black, style=filled, fillcolor=palegreen, label="GD:srfWtrF"];

	subgraph GD {
	rank="same"
	{normForcEqMK, bsShrFEqMK, resShrMK, mobShrMK, effNormFMK, resShearWOMK, mobShearWOMK, X_iMK, momentEqlMK, weightMK, sliceWghtMK, pressureMK, baseWtrFMK, srfWtrFMK}
	}

	FSMK	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:fctSfty"];
	nrmShrForIMMK	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:nrmShrFor"];
	nrmShrForNumRCMK	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:nrmShrForNum"];
	nrmShrForDenRCMK	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:nrmShrForDen"];
	intsliceFsRCMK	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:intsliceFs"];
	crtSlpIdIMMK	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:crtSlpId"];

	subgraph IM {
	rank="same"
	{FSMK, nrmShrForIMMK, nrmShrForNumRCMK, nrmShrForDenRCMK, intsliceFsRCMK, crtSlpIdIMMK}
	}

	readAndStore	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:readAndStore"];
	verifyInput	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:verifyInput"];
	determineCritSlip	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:determineCritSlip"];
	verifyOutput	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:verifyOutput"];
	displayInput	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:displayInput"];
	displayGraph	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:displayGraph"];
	displayFS	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:displayFS"];
	displayNormal	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:displayNormal"];
	displayShear	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:displayShear"];
	writeToFile	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:writeToFile"];
	correct	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:correct"];
	understandable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:understandable"];
	reusable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:reusable"];
	maintainable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:maintainable"];

	subgraph FR {
	rank="same"
	{readAndStore, verifyInput, determineCritSlip, verifyOutput, displayInput, displayGraph, displayFS, displayNormal, displayShear, writeToFile, correct, understandable, reusable, maintainable}
	}

	identifyCritAndFS	[shape=box, color=black, style=filled, fillcolor=darkgoldenrod1, label="GS:identifyCritAndFS"];
	determineNormalF	[shape=box, color=black, style=filled, fillcolor=darkgoldenrod1, label="GS:determineNormalF"];
	determineShearF	[shape=box, color=black, style=filled, fillcolor=darkgoldenrod1, label="GS:determineShearF"];

	subgraph GS {
	rank="same"
	{identifyCritAndFS, determineNormalF, determineShearF}
	}

	LC_inhomogeneous	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:LC_inhomogeneous"];
	LC_seismic	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:LC_seismic"];
	LC_external	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:LC_external"];
	UC_normshearlinear	[shape=box, color=black, style=filled, fillcolor=lavender, label="UC:UC_normshearlinear"];
	UC_2donly	[shape=box, color=black, style=filled, fillcolor=lavender, label="UC:UC_2donly"];

	subgraph LC {
	rank="same"
	{LC_inhomogeneous, LC_seismic, LC_external, UC_normshearlinear, UC_2donly}
	}

}
