""" InputParameters.jl
    Provides the function for reading inputs and the function for checking the physical constraints on the input
    - Authors: Samuel J. Crawford, Brooks MacLachlan, and W. Spencer Smith
    - Note: Generated by Drasil v0.1-alpha
"""

module InputParameters

""" Reads input from a file with the given file name
    - Parameter filename: name of the input file
    - Returns: launch speed: the initial speed of the projectile when launched (m/s)
    - Returns: launch angle: the angle between the launcher and a straight line from the launcher to the target (rad)
    - Returns: target position: the distance from the launcher to the target (m)
"""
function get_input(filename::String)
    infile = open(filename, "r")
    readline(infile)
    v_launch = parse(Float32, readline(infile))
    readline(infile)
    theta = parse(Float32, readline(infile))
    readline(infile)
    p_target = parse(Float32, readline(infile))
    close(infile)
    
    return v_launch, theta, p_target
end

""" Verifies that input values satisfy the physical constraints
    - Parameter v_launch: launch speed: the initial speed of the projectile when launched (m/s)
    - Parameter theta: launch angle: the angle between the launcher and a straight line from the launcher to the target (rad)
    - Parameter p_target: target position: the distance from the launcher to the target (m)
"""
function input_constraints(v_launch::Float32, theta::Float32, p_target::Float32)
    if !(v_launch > Float32(0.0))
        print("Warning: ")
        print("v_launch has value ")
        print(v_launch)
        print(", but is suggested to be ")
        print("above ")
        print(Float32(0.0))
        println(".")
    end
    if !(Float32(0.0) < theta && theta < pi / Float32(2.0))
        print("Warning: ")
        print("theta has value ")
        print(theta)
        print(", but is suggested to be ")
        print("between ")
        print(Float32(0.0))
        print(" and ")
        print(pi / Float32(2.0))
        print(" ((pi)/(2))")
        println(".")
    end
    if !(p_target > Float32(0.0))
        print("Warning: ")
        print("p_target has value ")
        print(p_target)
        print(", but is suggested to be ")
        print("above ")
        print(Float32(0.0))
        println(".")
    end
end

end
