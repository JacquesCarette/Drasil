""" HelloWorld.jl
    Advent of Code Day 1
    - Authors: Brandon Bosman
    - Note: Generated by Drasil v0.1-alpha
"""

module HelloWorld

""" Converts a string to integer
    - Parameter str: String to be converted
    - Returns: Integer value of the string
"""
function strToInt(str) # Generated code is str::Array{Char}, which doesn't typecheck
    val = 0
    for i in 0:1:length(str) - 1
        if str[i + 1] == '0'
            digit = 0
        elseif str[i + 1] == '1'
            digit = 1
        elseif str[i + 1] == '2'
            digit = 2
        elseif str[i + 1] == '3'
            digit = 3
        elseif str[i + 1] == '4'
            digit = 4
        elseif str[i + 1] == '5'
            digit = 5
        elseif str[i + 1] == '6'
            digit = 6
        elseif str[i + 1] == '7'
            digit = 7
        elseif str[i + 1] == '8'
            digit = 8
        elseif str[i + 1] == '9'
            digit = 9
        elseif str[i + 1] == ' '
            continue
        elseif str[i + 1] == '\n'
            continue
        else
            error("Non-integer string given")
        end
        val = 10 * val + digit
    end
    return val
end

""" Sorts a list of integers
    - Parameter xs: List to be sorted
"""
function selectionSort(xs::Array{Int64})
    for i in 0:1:length(xs) - 1 - 1
        maxIdx = i
        for j in i + 1:1:length(xs) - 1
            if xs[j + 1] < xs[maxIdx + 1]
                maxIdx = j
            end
        end
        temp = xs[i + 1]
        xs[i + 1] = xs[maxIdx + 1]
        xs[maxIdx + 1] = temp
    end
end

# Get input
global filePath = "../../../../drasil-code/test/input.txt"
global fileHandle = open(filePath, "r")
global fileContents = readlines(fileHandle)
close(fileHandle)

# Process input
global list1 = Int64[]
global list2 = Int64[]
for line in fileContents
    splitLine = split(line, " ")
    append!(list1, strToInt(splitLine[1]))
    append!(list2, strToInt(splitLine[4]))
end
selectionSort(list1)
selectionSort(list2)

# Calculate distance and print out
global distance = 0
for i in 0:1:length(list1) - 1
    global partDistance = list1[i + 1] - list2[i + 1]
    if partDistance < 0
        global partDistance = -partDistance
    end
    global distance += partDistance;
end
print("Distance: ")
println(distance)

end
