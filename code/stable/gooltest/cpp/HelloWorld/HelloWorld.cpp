/** \file HelloWorld.cpp
    \author Brandon Bosman
    \brief Advent of Code Day 1
    \note Generated by Drasil v0.1-alpha
*/

#include "HelloWorld.hpp"

#include <fstream>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using std::ifstream;
using std::string;
using std::vector;

int main(int argc, const char *argv[]) {
    // Get input
    string filePath = "../../../../drasil-code/test/input.txt";
    ifstream fileHandle;
    vector<string> fileContents;
    fileHandle.open(filePath, std::fstream::in);
    string nextLine;
    while (std::getline(fileHandle, nextLine)) {
        fileContents.push_back(nextLine);
    }
    fileHandle.close();
    
    // Process input
    vector<int> list1 = {};
    vector<int> list2 = {};
    for (const string &line : fileContents) {
        vector<string> splitLine;
        splitLine.clear();
        std::stringstream ss;
        ss.str(line);
        string word;
        while (std::getline(ss, word, ' ')) {
            splitLine.push_back(word);
        }
        list1.push_back(strToInt(splitLine.at(0)));
        list2.push_back(strToInt(splitLine.at(3)));
    }
    selectionSort(list1);
    selectionSort(list2);
    
    // Calculate distance and print out
    int distance = 0;
    for (int i = 0; i < (int)(list1.size()); i += 1) {
        int partDistance = list1.at(i) - list2.at(i);
        if (partDistance < 0) {
            partDistance = -partDistance;
        }
        distance += partDistance;
    }
    std::cout << "Distance: ";
    std::cout << distance << std::endl;
    
    return 0;
}

int strToInt(vector<char> str) {
    int val = 0;
    for (int i = 0; i < (int)(str.size()); i += 1) {
        int digit;
        switch(str.at(i)) {
            case '0':
                digit = 0;
                break;
            case '1':
                digit = 1;
                break;
            case '2':
                digit = 2;
                break;
            case '3':
                digit = 3;
                break;
            case '4':
                digit = 4;
                break;
            case '5':
                digit = 5;
                break;
            case '6':
                digit = 6;
                break;
            case '7':
                digit = 7;
                break;
            case '8':
                digit = 8;
                break;
            case '9':
                digit = 9;
                break;
            case ' ':
                continue;
                break;
            case '\n':
                continue;
                break;
            default:
                throw("Non-integer string given");
                break;
        };
        val = 10 * val + digit;
    }
    return val;
}

void selectionSort(vector<int> xs) {
    for (int i = 0; i < (int)(xs.size()) - 1; i += 1) {
        int maxIdx = i;
        for (int j = i + 1; j < (int)(xs.size()); j += 1) {
            if (xs.at(j) < xs.at(maxIdx)) {
                maxIdx = j;
            }
        }
        int temp = xs.at(i);
        xs.at(i) = xs.at(maxIdx);
        xs.at(maxIdx) = temp;
    }
}
