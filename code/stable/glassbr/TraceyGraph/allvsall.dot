digraph allvsall {
	assumpLDFC -> assumpSV;
	dataDefn:loadDurFactor -> assumpSV;
	dataDefn:loadDurFactor -> assumpLDFC;
	dataDefn:demandq -> dataDefn:stdOffDist;
	dataDefn:demandq -> dataDefn:eqTNTChar;
	theory:riskFun -> dataDefn:minThick;
	theory:riskFun -> dataDefn:loadDurFactor;
	theory:riskFun -> theory:stressDistFac;
	theory:stressDistFac -> dataDefn:aR;
	theory:stressDistFac -> theory:dimlessLoad;
	theory:nFL -> assumpSV;
	theory:nFL -> dataDefn:minThick;
	theory:nFL -> theory:tolLoad;
	theory:dimlessLoad -> assumpSV;
	theory:dimlessLoad -> dataDefn:minThick;
	theory:dimlessLoad -> dataDefn:glassTypeFac;
	theory:dimlessLoad -> dataDefn:demandq;
	theory:tolLoad -> dataDefn:aR;
	theory:tolLoad -> theory:sdfTol;
	theory:sdfTol -> assumpSV;
	theory:sdfTol -> dataDefn:minThick;
	theory:sdfTol -> dataDefn:loadDurFactor;
	theory:probBr -> theory:riskFun;
	theory:lResistance -> dataDefn:glassTypeFac;
	theory:lResistance -> theory:nFL;
	theory:isSafePb -> theory:probBr;
	theory:isSafePb -> theory:isSafeLR;
	theory:isSafeLR -> dataDefn:demandq;
	theory:isSafeLR -> theory:lResistance;
	theory:isSafeLR -> theory:isSafePb;
	outputValsAndKnownValues -> inputValues;
	outputValsAndKnownValues -> sysSetValsFollowingAssumps;
	checkGlassSafety -> theory:isSafePb;
	checkGlassSafety -> theory:isSafeLR;
	calcInternalBlastRisk -> assumpES;
	varValsOfmkE -> assumpSV;
	varValsOfmkE -> assumpLDFC;
	accMoreThanSingleLite -> assumpGL;
	accMoreBoundaryConditions -> assumpBC;
	considerMoreThanFlexGlass -> assumpRT;
	accAlteredGlass -> assumpGC;


	assumpGT	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpGT"];
	assumpGC	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpGC"];
	assumpES	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpES"];
	assumpSV	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpSV"];
	assumpGL	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpGL"];
	assumpBC	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpBC"];
	assumpRT	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpRT"];
	assumpLDFC	[shape=box, color=black, style=filled, fillcolor=mistyrose, label="A:assumpLDFC"];

	subgraph A {
	rank="same"
	{assumpGT, assumpGC, assumpES, assumpSV, assumpGL, assumpBC, assumpRT, assumpLDFC}
	}

	dataDefn:minThick	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:minThick"];
	dataDefn:loadDurFactor	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:loadDurFactor"];
	dataDefn:glassTypeFac	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:gTF"];
	dataDefn:stdOffDist	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:standOffDist"];
	dataDefn:aR	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:aspectRatio"];
	dataDefn:eqTNTChar	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:eqTNTW"];
	dataDefn:demandq	[shape=box, color=black, style=filled, fillcolor=paleturquoise1, label="DD:calofDemand"];

	subgraph DD {
	rank="same"
	{dataDefn:minThick, dataDefn:loadDurFactor, dataDefn:glassTypeFac, dataDefn:stdOffDist, dataDefn:aR, dataDefn:eqTNTChar, dataDefn:demandq}
	}

	theory:isSafeProb	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:isSafeProb"];
	theory:isSafeLoad	[shape=box, color=black, style=filled, fillcolor=pink, label="TM:isSafeLoad"];

	subgraph TM {
	rank="same"
	{theory:isSafeProb, theory:isSafeLoad}
	}

	theory:riskFun	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:riskFun"];
	theory:stressDistFac	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:stressDistFac"];
	theory:nFL	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:nFL"];
	theory:dimlessLoad	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:dimlessLoad"];
	theory:tolLoad	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:tolLoad"];
	theory:sdfTol	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:sdfTol"];
	theory:probBr	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:probOfBreak"];
	theory:lResistance	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:calofCapacity"];
	theory:isSafePb	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:isSafePb"];
	theory:isSafeLR	[shape=box, color=black, style=filled, fillcolor=khaki1, label="IM:isSafeLR"];

	subgraph IM {
	rank="same"
	{theory:riskFun, theory:stressDistFac, theory:nFL, theory:dimlessLoad, theory:tolLoad, theory:sdfTol, theory:probBr, theory:lResistance, theory:isSafePb, theory:isSafeLR}
	}

	inputValues	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:inputValues"];
	sysSetValsFollowingAssumps	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:sysSetValsFollowingAssumps"];
	checkInputWithDataCons	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:checkInputWithDataCons"];
	outputValsAndKnownValues	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:outputValsAndKnownValues"];
	checkGlassSafety	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:checkGlassSafety"];
	outputValues	[shape=box, color=black, style=filled, fillcolor=ivory, label="FR:outputValues"];
	correct	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:correct"];
	verifiable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:verifiable"];
	understandable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:understandable"];
	reusable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:reusable"];
	maintainable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:maintainable"];
	portable	[shape=box, color=black, style=filled, fillcolor=ivory, label="NFR:portable"];

	subgraph FR {
	rank="same"
	{inputValues, sysSetValsFollowingAssumps, checkInputWithDataCons, outputValsAndKnownValues, checkGlassSafety, outputValues, correct, verifiable, understandable, reusable, maintainable, portable}
	}

	willBreakGS	[shape=box, color=black, style=filled, fillcolor=darkgoldenrod1, label="GS:willBreakGS"];

	subgraph GS {
	rank="same"
	{willBreakGS}
	}

	calcInternalBlastRisk	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:calcInternalBlastRisk"];
	varValsOfmkE	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:varValsOfmkE"];
	accMoreThanSingleLite	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:accMoreThanSingleLite"];
	accMoreBoundaryConditions	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:accMoreBoundaryConditions"];
	considerMoreThanFlexGlass	[shape=box, color=black, style=filled, fillcolor=lavender, label="LC:considerMoreThanFlexGlass"];
	predictWithstandOfCertDeg	[shape=box, color=black, style=filled, fillcolor=lavender, label="UC:predictWithstandOfCertDeg"];
	accAlteredGlass	[shape=box, color=black, style=filled, fillcolor=lavender, label="UC:accAlteredGlass"];

	subgraph LC {
	rank="same"
	{calcInternalBlastRisk, varValsOfmkE, accMoreThanSingleLite, accMoreBoundaryConditions, considerMoreThanFlexGlass, predictWithstandOfCertDeg, accAlteredGlass}
	}

}
